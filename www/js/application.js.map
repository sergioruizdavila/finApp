{"version":3,"sources":["app/app.core.module.ts","app/app.module.ts","app/app.run.ts","app/app.values.ts","app/auth/auth.service.ts","components/tabs/tabs.config.ts","components/tabs/tabs.controller.ts","app/core/firebase/firebase.service.ts","app/models/finance/finance.model.ts","app/models/finance/finance.service.ts","app/models/user/user.model.ts","app/models/user/user.service.ts","app/pages/addInvestmentPage/addInvestmentPage.config.ts","app/pages/addInvestmentPage/addInvestmentPage.controller.ts","app/pages/addBusinessPage/addBusinessPage.config.ts","app/pages/addBusinessPage/addBusinessPage.controller.ts","app/pages/addNecessaryExpensePage/addNecessaryExpensePage.config.ts","app/pages/addNecessaryExpensePage/addNecessaryExpensePage.controller.ts","app/pages/addSalaryPage/addSalaryPage.config.ts","app/pages/addSalaryPage/addSalaryPage.controller.ts","app/pages/cardsPage/cardsPage.config.ts","app/pages/cardsPage/cardsPage.controller.ts","app/pages/addUnnecessaryExpensePage/addUnnecessaryExpensePage.config.ts","app/pages/addUnnecessaryExpensePage/addUnnecessaryExpensePage.controller.ts","app/pages/historyPage/historyPage.config.ts","app/pages/historyPage/historyPage.controller.ts","app/pages/logInPage/logInPage.config.ts","app/pages/logInPage/logInPage.controller.ts","app/pages/main/main.config.ts","app/pages/main/main.controller.ts","app/pages/profilePage/profilePage.config.ts","app/pages/profilePage/profilePage.controller.ts","app/pages/tutorialPage/tutorialPage.config.ts","app/pages/tutorialPage/tutorialPage.controller.ts","app/pages/signUpPage/signUpPage.config.ts","app/pages/signUpPage/signUpPage.controller.ts","components/popup/listPopup/listPopup.config.ts","components/popup/listPopup/listPopup.directive.ts","components/popup/expenseDetailPopup/expenseDetailPopup.config.ts","components/popup/expenseDetailPopup/expenseDetailPopup.directive.ts","app/core/interfaces/interfaces.ts","app/core/util/functionsUtil/functionsUtil.service.ts"],"names":[],"mappings":"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","file":"application.js","sourceRoot":"/source/","sourcesContent":["/**\r\n * module() Here inject dependencies of Angular Modules and 3rd Party\r\n *\r\n * @param {none}\r\n * @return {void}\r\n */\r\n\r\n(function (): void {\r\n    'use strict';\r\n\r\n    angular.module('finApp.core', [\r\n        /*Angular Modules*/\r\n        'pascalprecht.translate',\r\n\r\n        /*3rd Party*/\r\n        'ionic',\r\n        'firebase'\r\n    ]);\r\n\r\n})();\r\n","/**\r\n * module() Here inject dependencies of App modules and components, such as controllers, service, directive, etc\r\n * config() Here define the main state, routes, http interceptor\r\n *\r\n * @param {angular.ui.IUrlRouterProvider} $urlRouterProvider\r\n * @return {void}\r\n */\r\n\r\n(function (): void {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('finApp', [\r\n            'finApp.core',\r\n            'finApp.core.util',\r\n            'finApp.core.firebase',\r\n            'finApp.auth',\r\n            'finApp.pages.main',\r\n            'finApp.pages.tutorialPage',\r\n            'finApp.pages.signUpPage',\r\n            'finApp.pages.logInPage',\r\n            'finApp.pages.historyPage',\r\n            'finApp.pages.cardsPage',\r\n            'finApp.pages.profilePage',\r\n            'finApp.pages.addSalaryPage',\r\n            'finApp.pages.addInvestmentPage',\r\n            'finApp.pages.addBusinessPage',\r\n            'finApp.pages.addNecessaryExpensePage',\r\n            'finApp.pages.addUnnecessaryExpensePage',\r\n            'finApp.components.tabs',\r\n            'finApp.components.faExpenseDetailPopup',\r\n            'finApp.components.faListPopup',\r\n            'finApp.models.user',\r\n            'finApp.models.finance'\r\n        ])\r\n        .config(config);\r\n\r\n    function config($urlRouterProvider: angular.ui.IUrlRouterProvider,\r\n                    $translateProvider: angular.translate.ITranslateProvider) {\r\n\r\n        $urlRouterProvider.otherwise('/page/tutorial');\r\n\r\n        /* Translate Provider */\r\n        let prefix = 'assets/i18n/';\r\n        let suffix = '.json';\r\n\r\n        $translateProvider.useStaticFilesLoader({\r\n            prefix: prefix,\r\n            suffix: suffix\r\n        });\r\n\r\n        $translateProvider.preferredLanguage('es');\r\n    }\r\n\r\n})();\r\n","/**\r\n * run() run low-level functionality\r\n * such as authorization, get user info, roles, etc.\r\n *\r\n * @param {scope} $rootScope\r\n * @param {ICurrentUser} currentUser\r\n * @return {void}\r\n */\r\n\r\n\r\n(function(): void {\r\n\r\n    'use strict';\r\n\r\n    angular\r\n        .module('finApp')\r\n        .run(run);\r\n\r\n    //run.$inject = ['$ionicPlatform', '$rootScope'];\r\n\r\n    function run($ionicPlatform, $rootScope: app.interfaces.IFinAppRootScope): void {\r\n\r\n        $ionicPlatform.ready(function() {\r\n            if (window.cordova && window.cordova.plugins.Keyboard) {\r\n                // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\r\n                // for form inputs)\r\n                cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\r\n\r\n                // Don't remove this line unless you know what you are doing. It stops the viewport\r\n                // from snapping when text inputs are focused. Ionic handles this internally for\r\n                // a much nicer keyboard experience.\r\n                cordova.plugins.Keyboard.disableScroll(true);\r\n            }\r\n            if (window.StatusBar) {\r\n                StatusBar.styleDefault();\r\n            }\r\n\r\n            //Create User object\r\n            $rootScope.User = new app.models.user.UserFirebase();\r\n\r\n        });\r\n    }\r\n\r\n})();\r\n","/**\r\n * values() Here we define each core variables\r\n * such as user logged Id, end points, etc\r\n *\r\n * @param {IDataConfig} dataConfig\r\n * @return {void}\r\n */\r\n\r\n/*--  INTERFACE --*/\r\ninterface IDataConfig {\r\n    baseUrl: string;\r\n    salaryIncomeUrl: string;\r\n    investmentIncomeUrl: string;\r\n    businessIncomeUrl: string;\r\n    neccesaryExpenseUrl: string;\r\n    unneccesaryExpenseUrl: string;\r\n    userId: string;\r\n}\r\n\r\n/*--  MAIN FUNCTION --*/\r\n(function (): void {\r\n\r\n    'use strict';\r\n\r\n    var dataConfig: IDataConfig = {\r\n        baseUrl: 'https://shining-fire-8072.firebaseio.com',\r\n        salaryIncomeUrl: '/finance/income/salary',\r\n        investmentIncomeUrl: '/finance/income/investment',\r\n        businessIncomeUrl: '/finance/income/business',\r\n        neccesaryExpenseUrl: '/typeOfExpense/necessaries/',\r\n        unneccesaryExpenseUrl: '/typeOfExpense/unnecessaries/',\r\n        userId: ''\r\n    };\r\n\r\n    angular\r\n        .module('finApp')\r\n        .value('dataConfig', dataConfig);\r\n\r\n})();\r\n","/**\n * AuthService\n * @description - Authorization Service\n * @function\n * @param {app.core.firebase.FirebaseFactory} FirebaseFactory - Firebase connections.\n * @param {AngularFireAuthService} $firebaseAuth - AngularFire methods.\n */\n\nmodule app.auth {\n\n    export function AuthService(FirebaseFactory: app.core.firebase.IFirebaseFactory,\n        $firebaseAuth: AngularFireAuthService,\n        $rootScope: app.interfaces.IFinAppRootScope) {\n\n        var ref = null;\n\n        var service = {\n\n            // Return a Firebase reference\n            getRef: function() {\n                ref = FirebaseFactory.createFirebase();\n                //check Auth Status\n                ref.onAuth(this.authDataCallback);\n                return $firebaseAuth(ref);\n            },\n\n            // Create a callback which logs the current auth state\n            authDataCallback: function(authData) {\n                if (authData) {\n                    console.log('AUTH LOG: User ' + authData.uid + ' is logged in with: ' + authData.provider);\n                } else {\n                    console.log('AUTH LOG: User is logged out');\n                }\n            },\n\n            // Create a callback to handle the result of the authentication\n            authHandler: function (error, authData) {\n                if (error) {\n                    console.log('Login Failed!', error);\n                } else {\n                    console.log('Authenticated successfully with payload:', authData);\n                }\n            }\n\n        };\n\n        return service;\n\n    }\n\n    AuthService.$inject = ['finApp.core.firebase.FirebaseFactory',\n                           '$firebaseAuth',\n                           '$rootScope'];\n\n    angular\n        .module('finApp.auth', [])\n        .factory('finApp.auth.AuthService', AuthService);\n}\n","/**\n* config()\n* @description - tabs config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('finApp.components.tabs', [])\n        .config(config);\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('tabs', {\n                url: '/tabs',\n                views: {\n                    'container': {\n                        templateUrl: 'templates/components/tabs/tabs.html',\n                        controller: 'finApp.components.tabs.TabsController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                abstract: true\n            });\n    }\n})();\n","/**\n * TabsController\n * @description - Dashboard Page Controller\n */\n\nmodule components.tabs {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITabsController {\n        activate: () => void;\n        isSet: (tabId: number) => boolean;\n        setTab: (tabId: number) => void;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TabsController implements ITabsController {\n\n        static controllerId = 'finApp.components.tabs.TabsController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        active: boolean;\n        tab: number;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['$state'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $state: ng.ui.IStateService) {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            this.tab = 1;\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            console.log('tabs controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n        isSet(tabId): boolean {\n            return this.tab === tabId;\n        }\n\n        setTab(tabId): void {\n            this.tab = tabId;\n        };\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.components.tabs')\n        .controller(TabsController.controllerId, TabsController);\n\n}\n","/**\n * FirebaseFactory\n * @description - Firebase Service in order to create Firebase connection\n * @constructor\n */\n\nmodule app.core.firebase {\n\n    'use strict';\n\n    export interface IFirebaseFactory {\n        createFirebase: () => Firebase;\n        update: (url: string, data: any) => void;\n        add: (url: string, data: any) => void;\n        getArray: (url: string) => any;\n        getArrayByDate: (url: string, startDate: string, endDate: string) => any;\n    }\n\n    export class FirebaseFactory implements IFirebaseFactory {\n\n        static serviceId = 'finApp.core.firebase.FirebaseFactory';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        baseUrl: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['dataConfig', '$firebaseArray'];\n\n        constructor(dataConfig: IDataConfig,\n                    private $firebaseArray: AngularFireArrayService) {\n            this.baseUrl = dataConfig.baseUrl;\n        }\n\n        /*-- METHODS --*/\n\n        /**\n        * Creates a new Firebase JavaScript API Object from this configuration.\n        * @returns {Firebase}\n        */\n        createFirebase(): Firebase {\n            return new Firebase(this.baseUrl);\n        }\n\n        /**\n        * update\n        * @description - update service against Firebase\n        * @function\n        * @params {string} url - uri of firebase\n        * @params {any} data - data to send in order to update object on firebase\n        */\n        update(url, data): void {\n            let ref = new Firebase(this.baseUrl + url);\n            ref.update(data);\n        }\n\n        /**\n        * add\n        * @description - add item on Array against Firebase\n        * @function\n        * @params {string} url - uri of firebase\n        * @params {any} data - item to send in order to add object on firebase\n        */\n        add(url, data): void {\n            let ref = new Firebase(this.baseUrl + url);\n            ref.set(data);\n        }\n\n        /**\n        * getArray\n        * @description - get data arry against Firebase\n        * @function\n        * @params {string} url - uri of firebase\n        */\n        getArray(url): any {\n            let ref = new Firebase(this.baseUrl + url);\n            return this.$firebaseArray(ref).$loaded().then(function(data) {\n                return data;\n            });\n        }\n\n        /**\n        * getArrayByDate\n        * @description - get data by date range against Firebase\n        * @function\n        * @params {string} url - uri of firebase\n        * @params {string} startDate - start specific Date\n        * @params {string} endDate - end specific Date\n        */\n        getArrayByDate(url, startDate, endDate): any {\n            let ref = new Firebase(this.baseUrl + url);\n            let query: any = ref.orderByChild(\"dateCreated/complete\").startAt(startDate).endAt(endDate);\n            return this.$firebaseArray(query).$loaded().then(function(data) {\n                return data;\n            });\n        }\n\n\n\n        static instance(dataConfig: IDataConfig,\n                        $firebaseArray: AngularFireArrayService): IFirebaseFactory {\n            return new FirebaseFactory(dataConfig, $firebaseArray);\n        }\n\n    }\n\n    angular.module('finApp.core.firebase', [])\n    .factory(FirebaseFactory.serviceId, ['dataConfig',\n        '$firebaseArray',\n        FirebaseFactory.instance]);\n\n}\n","/**\n * Specifies the Classes and Interfaces related to Users in our Model\n */\n\nmodule app.models.finance {\n\n    /****************************************/\n    /*              INTERFACES              */\n    /****************************************/\n\n    export interface IMoney {\n        num: number;\n        formatted: string;\n    }\n\n    export interface IExpense {\n        uid: string;\n        title: string;\n        value: IMoney;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n\n    export class Finance {\n\n        /*-- PROPERTIES --*/\n        private uid: string;\n        private income: Income;\n        private typeOfExpense: TypeOfExpense;\n        private dateCreated: app.interfaces.IDateFormatted;\n        private dateUpdated: string;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            //LOG\n            console.log('init finances');\n\n            //init properties\n            this.uid = null;\n            this.income = new Income();\n            this.typeOfExpense = new TypeOfExpense();\n            this.dateCreated = app.core.util.functionsUtil.FunctionsUtilService.splitDateFormat(new Date().toString());\n            this.dateUpdated = new Date().toString();\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply id'; }\n            this.uid = uid;\n        }\n\n        get Income() {\n            return this.income;\n        }\n\n        get TypeOfExpense() {\n            return this.typeOfExpense;\n        }\n\n        get DateUpdated() {\n            return this.dateUpdated;\n        }\n\n        set DateUpdated(date: string) {\n            if (date === undefined) { throw 'Please supply Updated Date'; }\n            this.dateUpdated = date;\n        }\n\n        set DateCreated(date: string) {\n            if (date === undefined) { throw 'Please supply Created Date'; }\n            this.dateCreated = app.core.util.functionsUtil.FunctionsUtilService.splitDateFormat(date);\n        }\n\n    }\n\n    /****************************************/\n    /*             INCOME CLASS             */\n    /****************************************/\n\n    export class Income {\n\n        /*-- PROPERTIES --*/\n        private salary: IMoney;\n        private investment: IMoney;\n        private business: IMoney;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            //LOG\n            console.log('init income');\n\n            //init properties\n            this.salary = {num: null, formatted: ''};\n            this.investment = {num: null, formatted: ''};\n            this.business = {num: null, formatted: ''};\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Salary() {\n            return this.salary;\n        }\n\n        set Salary(salary: IMoney) {\n            if (salary === undefined) { throw 'Please supply salary value'; }\n            this.salary = salary;\n        }\n\n        get Investment() {\n            return this.investment;\n        }\n\n        set Investment(investment: IMoney) {\n            if (investment === undefined) { throw 'Please supply investment value'; }\n            this.investment = investment;\n        }\n\n        get Business() {\n            return this.business;\n        }\n\n        set Business(business: IMoney) {\n            if (business === undefined) { throw 'Please supply business value'; }\n            this.business = business;\n        }\n    }\n\n\n\n    /****************************************/\n    /*         TYPE OF EXPENSE CLASS        */\n    /****************************************/\n\n    export class TypeOfExpense {\n        /*-- PROPERTIES --*/\n        private necessaries: Array<Expense>;\n        private unnecessaries: Array<Expense>;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            //LOG\n            console.log('init type of expense');\n\n            //init properties\n            this.necessaries = [];\n            this.unnecessaries = [];\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Necessaries() {\n            return this.necessaries;\n        }\n\n        get Unnecessaries() {\n            return this.unnecessaries;\n        }\n\n        setNecessaries(expense: Expense): Expense {\n            if(expense === undefined) { throw 'Please supply neccesary expense value'; }\n\n            //Update element in Array\n            if(expense.Uid) {\n                this.necessaries.forEach(function (element, index, array) {\n                    if (expense.Uid === element.Uid) {\n                        array[index] = expense;\n                    }\n                });\n            //Add new element in Array\n            } else {\n                expense.Uid = app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n                this.necessaries.push(expense);\n            }\n\n            return expense;\n        }\n\n        setUnnecessaries(expense: Expense): Expense {\n            if (expense === undefined) { throw 'Please supply unneccesary expense value'; }\n\n            //Update element in Array\n            if(expense.Uid){\n                this.unnecessaries.forEach(function(element, index, array){\n                    if(expense.Uid === element.Uid) {\n                        array[index] = expense;\n                    }\n                });\n            //Add new element in Array\n            } else {\n                expense.Uid = app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n                this.unnecessaries.push(expense);\n            }\n\n            return expense;\n        }\n    }\n\n    /****************************************/\n    /*             EXPENSE CLASS            */\n    /****************************************/\n\n    export class Expense {\n\n        /*-- PROPERTIES --*/\n        private uid: string;\n        private title: string;\n        private value: IMoney;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            //LOG\n            console.log('init expense');\n\n            //init properties\n            this.uid = '';\n            this.title = '';\n            this.value = {num: null, formatted: ''};\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply uid value'; }\n            this.uid = uid;\n        }\n\n        get Title() {\n            return this.title;\n        }\n\n        set Title(title: string) {\n            if (title === undefined) { throw 'Please supply title value'; }\n            this.title = title;\n        }\n\n        get Value() {\n            return this.value;\n        }\n\n        set Value(value: IMoney) {\n            if (value === undefined) { throw 'Please supply value'; }\n            this.value = value;\n        }\n\n    }\n\n}\n","/**\n * FinanceService\n * @description - Services related on Finance Model.\n * @constructor\n * @param {app.core.firebase.IFirebaseFactory} FirebaseFactory - instance Firebase services.\n * @param {AngularFireObjectService} $firebaseObject - firebase provider that let create three binding objects.\n * @param {AngularFireArrayService} $firebaseArray - firebase provider that let create three binding array objects.\n */\n\nmodule app.models.finance {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IFinanceService {\n        ref: any;\n        saveFinance: (finance: Finance) => void;\n        saveSalary: (newSalary: IMoney) => void;\n        saveInvestment: (newInvestment: IMoney) => void;\n        saveBusiness: (newBusiness: IMoney) => void;\n        saveNecessaryExpense: (necessaryExpense: Expense, financeId: string) => void;\n        saveUnnecessaryExpense: (unnecessaryExpense: Expense, financeId: string) => void;\n        getAllFinances: () => angular.IPromise<Array<Finance>>;\n        getFinancesByDate: (startDate: string, endDate: string) => void;\n        /*-- mathematical calculations --*/\n        total: (numbers: Array<number>) => number;\n        getSaving: (incomes: number, expenses: number) => number;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class FinanceService implements IFinanceService {\n\n        static serviceId = 'finApp.models.finance.FinanceService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        ref: Firebase;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['dataConfig',\n                          'finApp.core.firebase.FirebaseFactory',\n                          '$firebaseObject',\n                          '$firebaseArray',\n                          '$rootScope'];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private dataConfig: IDataConfig,\n                    private FirebaseFactory: app.core.firebase.IFirebaseFactory,\n                    private $firebaseObject: AngularFireObjectService,\n                    private $firebaseArray: AngularFireArrayService,\n                    private $rootScope: app.interfaces.IFinAppRootScope) {\n\n            this.ref = this.FirebaseFactory.createFirebase();\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * saveSalary\n        * @description - save user salary on firebase\n        * @function\n        * @parameter {string} newSalary - new value for user salary property\n        */\n        saveFinance(finance): void {\n            let url = '/users/' + this.$rootScope.User.Uid + '/finances/' + finance.Uid;\n            this.FirebaseFactory.add(url, finance);\n        }\n\n        /**\n        * saveSalary\n        * @description - save user salary on firebase\n        * @function\n        * @parameter {string} newSalary - new value for user salary property\n        */\n        saveSalary(newSalary): void {\n            let url = '/users/' + this.$rootScope.User.Uid + this.dataConfig.salaryIncomeUrl;\n            this.FirebaseFactory.update(url, newSalary);\n        }\n\n        /**\n        * saveInvestment\n        * @description - save user investment income on firebase\n        * @function\n        * @parameter {string} newSalary - new value for user investment property\n        */\n        saveInvestment(newInvestment): void {\n            let url = '/users/' + this.$rootScope.User.Uid + this.dataConfig.investmentIncomeUrl;\n            this.FirebaseFactory.update(url, newInvestment);\n        }\n\n        /**\n        * saveBusiness\n        * @description - save user business income on firebase\n        * @function\n        * @parameter {string} newBusiness - new value for user business property\n        */\n        saveBusiness(newBusiness): void {\n            let url = '/users/' + this.$rootScope.User.Uid + this.dataConfig.businessIncomeUrl;\n            this.FirebaseFactory.update(url, newBusiness);\n        }\n\n        /**\n        * saveNecessaryExpense\n        * @description - add/update neccesary expense on firebase\n        * @function\n        * @parameter {string} necessaryExpense - new value for user necessary expense property\n        */\n        saveNecessaryExpense(necessaryExpense, financeId): void {\n            let url = '/users/' + this.$rootScope.User.Uid + '/finances/' + financeId + this.dataConfig.neccesaryExpenseUrl + necessaryExpense.Uid;\n            this.FirebaseFactory.add(url, necessaryExpense);\n        }\n\n        /**\n        * saveUnnecessaryExpense\n        * @description - add/update unneccesary expense on firebase\n        * @function\n        * @parameter {string} unnecessaryExpense - new value for user unnecessary expense property\n        */\n        saveUnnecessaryExpense(unnecessaryExpense, financeId): void {\n            let url = '/users/' + this.$rootScope.User.Uid + '/finances/' + financeId + this.dataConfig.unneccesaryExpenseUrl + unnecessaryExpense.Uid;\n            this.FirebaseFactory.add(url, unnecessaryExpense);\n        }\n\n        /**\n        * getFinances\n        * @description - get user's finances\n        * @function\n        */\n        getAllFinances(): angular.IPromise<Array<Finance>> {\n            let url = '/users/' + this.$rootScope.User.Uid + '/finances/';\n            return this.FirebaseFactory.getArray(url).then(function(data){\n                return data;\n            });\n        }\n\n        /**\n        * getFinanceByDate\n        * @description - get user's finances by specific date\n        * @use - this.FinanceService.getFinancesByDate('Mon May 01 2016 01:23:34 GMT-0500 (COT)',\n        *                                              'Mon May 03 2016 20:23:34 GMT-0500 (COT)');\n        * @function\n        * @parameter {string} userId - user uid on firebase\n        * @parameter {string} startDate - start specific date\n        * @parameter {string} endDate - end specific date\n        */\n        getFinancesByDate(startDate, endDate): any {\n            let url = '/users/' + this.$rootScope.User.Uid + '/finances/';\n            return this.FirebaseFactory.getArrayByDate(url, startDate, endDate).then(function(data){\n                console.log(data);\n            });\n        }\n\n        /***********************************/\n        /*    mathematical calculations    */\n        /***********************************/\n\n        /**\n        * total\n        * @description - sum each element and return the total value\n        * @function\n        * @parameter {Array<number>} numbers - numbers Array that we need to sum\n        */\n        total(numbers): number {\n            let total = 0;\n            for(var i = 0; i < numbers.length; i++) {\n                total += numbers[i];\n            }\n            return total;\n        }\n\n        /**\n        * getSaving\n        * @description: incomes - expenses = saving\n        * @function\n        * @parameter {number} incomes - sum of incomes\n        * @parameter {number} expenses - sum of expenses\n        */\n        getSaving(incomes, expenses): number {\n            let saving = 0;\n            saving = incomes - expenses;\n            return saving;\n        }\n\n\n        /**********************************/\n        /*        INSTANCE FACTORY        */\n        /**********************************/\n        static instance(dataConfig: IDataConfig,\n            FirebaseFactory: app.core.firebase.IFirebaseFactory,\n            $firebaseObject: AngularFireObjectService,\n            $firebaseArray: AngularFireArrayService,\n            $rootScope: app.interfaces.IFinAppRootScope): IFinanceService {\n\n            return new FinanceService(dataConfig, FirebaseFactory, $firebaseObject, $firebaseArray, $rootScope);\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.models.finance', [])\n        .factory(FinanceService.serviceId, ['dataConfig',\n            'finApp.core.firebase.FirebaseFactory',\n            '$firebaseObject',\n            '$firebaseArray',\n            '$rootScope',\n            FinanceService.instance]);\n\n}\n","/**\n * Specifies the Classes and Interfaces related to Users in our Model\n */\n\nmodule app.models.user {\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n\n    export class User {\n\n        /*-- PROPERTIES --*/\n        private uid: string;\n        private username: string;\n        private email: string;\n        private finances: Array<app.models.finance.Finance>;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            //LOG\n            console.log('User Model instanced');\n\n            //init properties\n            this.uid = null;\n            this.username = null;\n            this.email = null;\n            this.finances = [];\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply id'; }\n            this.uid = uid;\n        }\n\n        get Username() {\n            return this.username;\n        }\n\n        set Username(username: string) {\n            if (username === undefined) { throw 'Please supply username'; }\n            this.username = username;\n        }\n\n        get Email() {\n            return this.email;\n        }\n\n        set Email(email: string) {\n            if (email === undefined) { throw 'Please supply email'; }\n            this.email = email;\n        }\n\n        get Finance() {\n            return this.finances;\n        }\n\n        setFinance(finance: app.models.finance.Finance): app.models.finance.Finance {\n            if(finance === undefined) { throw 'Please supply finance element'; }\n\n            //Update element in Array\n            if(finance.Uid) {\n                this.finances.forEach(function (element, index, array) {\n                    if (finance.Uid === element.Uid) {\n                        array[index] = finance;\n                    }\n                });\n            //Add new element in Array\n            } else {\n                finance.Uid = app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n                this.finances.push(finance);\n            }\n\n            return finance;\n        }\n\n    }\n\n\n    /**\n     * Specifies the Classes and Interfaces related to UserFirebase in our Model\n     */\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class UserFirebase extends User {\n\n        private provider: string = null;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            super();\n            console.log('UserFirebase Model instanced');\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n        get Provider() {\n            return this.provider;\n        }\n\n        set Provider(provider: string) {\n            if (provider === undefined) { throw 'Please supply provider'; }\n            this.provider = provider;\n        }\n\n    }\n\n\n\n}\n","/**\n * UserService\n * @description - Services related on User Model.\n * @constructor\n * @param {app.core.firebase.IFirebaseFactory} FirebaseFactory - instance Firebase services.\n * @param {AngularFireObjectService} $firebaseObject - firebase provider that let create three binding objects.\n * @param {AngularFireArrayService} $firebaseArray - firebase provider that let create three binding array objects.\n */\n\nmodule app.models.user {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IUserService {\n        ref: any;\n        existUserByEmail: (email: string) => angular.IPromise<boolean>;\n        getUserByEmail: (email: string) => AngularFireObject;\n        getUsers: () => AngularFireArray;\n        bindingUser: (uid: string, $rootScope: app.interfaces.IFinAppRootScope) => any;\n        createUser: (newUser: app.models.user.User, callback: (err) => void) => void;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class UserService implements IUserService {\n\n        static serviceId = 'finApp.models.user.UserService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        ref: Firebase;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['finApp.core.firebase.FirebaseFactory',\n                          '$firebaseObject',\n                          '$firebaseArray',\n                          '$rootScope'];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private FirebaseFactory: app.core.firebase.IFirebaseFactory,\n            private $firebaseObject: AngularFireObjectService,\n            private $firebaseArray: AngularFireArrayService,\n            private $rootScope: app.interfaces.IFinAppRootScope) {\n\n            this.ref = this.FirebaseFactory.createFirebase();\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * getUserByEmail\n        * @description - get an expecific User by Email\n        * @function\n        * @params {string} email - valid email string\n        * @return {AngularFireObjectService} firebaseObject - Return a AngularFireArray object\n        */\n        getUserByEmail(email): AngularFireObject {\n            let userRef = this.ref.child(email);\n            // return it as a synchronized object\n            return this.$firebaseObject(userRef);\n        }\n\n        /**\n        * getUsers\n        * @description - get all Users\n        * @function\n        * @return {AngularFireArrayService} firebaseArray - Return a AngularFireArray object\n        */\n        getUsers(): AngularFireArray {\n            // return it as a synchronized object\n            return this.$firebaseArray(this.ref);\n        }\n\n\n        /**\n        * createUser\n        * @description - create new User\n        * @function\n        * @parameters {app.model.user.User} newUser - include the user information object\n        * @parameters {function} callback - function callback required to know if create new user was Ok\n        */\n        createUser(newUser, callback): void {\n            let userRef = this.ref.child('users/' + newUser.Uid);\n            userRef.set(newUser, callback);\n        }\n\n\n        /**\n        * bindingUser\n        * @description - Bind a new User in dataBase and make three binding ways\n        * @function\n        * @params {string} uid - user logged uid\n        * @params {app.interfaces.IFinAppRootScope} $rootScope\n        * @return {AngularFireObjectService} firebaseObject - Return an Element as a\n        *                                    synchronized three bind object.\n        */\n        bindingUser(uid, $rootScope): any {\n            let newUserRef = this.ref.child('users').child(uid);\n            return this.$firebaseObject(newUserRef).$bindTo($rootScope, 'User').then(function() {\n                console.log($rootScope.User); // { foo: \"bar\" }\n                $rootScope.User.foo = 'baz';  // will be saved to the database\n                this.ref.set({ foo: 'baz' });  // this would update the database and $scope.data\n            });\n        }\n\n\n        /**\n        * existUserByEmail\n        * @description - look for each user on database, and after that It checks if there is\n                         an 'user' with specific 'email'. If exist a user with this email return true,\n                         if not, return false.\n        * @function\n        * @params {string} email - valid email string\n        * @return {angular.IPromise<boolean>} promise - return a firebaseArray promise\n        */\n        existUserByEmail(email): angular.IPromise<boolean> {\n\n            let promise = this.$firebaseArray(this.ref).$loaded().then(function(users) {\n\n                for (let i = 0; i < users.length; i++) {\n\n                    for (let key in users[i]) {\n\n                        let obj = users[i][key] || { email: null };\n\n                        if (obj.email === email) {\n                            return true;\n                        }\n\n                    }\n\n                    return false;\n\n                }\n\n                return false;\n            });\n\n            return promise;\n        }\n\n        /**********************************/\n        /*        INSTANCE FACTORY        */\n        /**********************************/\n        static instance(FirebaseFactory: app.core.firebase.IFirebaseFactory,\n            $firebaseObject: AngularFireObjectService,\n            $firebaseArray: AngularFireArrayService,\n            $rootScope: app.interfaces.IFinAppRootScope): IUserService {\n\n            return new UserService(FirebaseFactory, $firebaseObject, $firebaseArray, $rootScope);\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.models.user', [])\n        .factory(UserService.serviceId, ['finApp.core.firebase.FirebaseFactory',\n            '$firebaseObject',\n            '$firebaseArray',\n            '$rootScope',\n            UserService.instance]);\n\n}\n","/**\n* config()\n* @description - add investment page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('finApp.pages.addInvestmentPage', [])\n        .config(config);\n\n    //config.$inject = ['ionic'];\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.investment', {\n                url: '/investment',\n                views: {\n                    'container': {\n                        templateUrl: 'templates/app/pages/addInvestmentPage/addInvestmentPage.html',\n                        controller: 'finApp.pages.addInvestmentPage.AddInvestmentPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                params: {\n                    financeId: null\n                }\n            });\n    }\n})();\n","/**\n * AddInvestmentPageController\n * @description - Add Investment Page Controller\n */\n\nmodule app.pages.addInvestmentPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IAddInvestmentPageController {\n        form: IAddInvestmentForm;\n        activate: () => void;\n        goToNext: () => void;\n        goToBack: () => void;\n    }\n\n    export interface IAddInvestmentDataConfig extends ng.ui.IStateParamsService {\n        financeId: string;\n    }\n\n    export interface IAddInvestmentForm {\n        investment: app.models.finance.IMoney;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class AddInvestmentPageController implements IAddInvestmentPageController {\n\n        static controllerId = 'finApp.pages.addInvestmentPage.AddInvestmentPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IAddInvestmentForm;\n        addInvestmentDataConfig: IAddInvestmentDataConfig;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['dataConfig',\n                          '$ionicHistory',\n                          'finApp.models.finance.FinanceService',\n                          'finApp.core.util.FunctionsUtilService',\n                          '$state',\n                          '$stateParams',\n                          '$rootScope'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private dataConfig: IDataConfig,\n        private $ionicHistory: ionic.navigation.IonicHistoryService,\n        private FinanceService: app.models.finance.IFinanceService,\n        private FunctionsUtilService: app.core.util.functionsUtil.FunctionsUtilService,\n        private $state: ng.ui.IStateService,\n        private $stateParams: IAddInvestmentDataConfig,\n        private $rootScope: app.interfaces.IFinAppRootScope) {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            //Init form\n            this.form = {\n                investment: { num: null, formatted: '' }\n            };\n\n            this.addInvestmentDataConfig = this.$stateParams;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            console.log('addInvestmentPage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Format Investment Method\n        * @description Format the investment value with default currency\n        */\n        _formatInvestment(): void {\n            let currencyObj: app.models.finance.IMoney =\n            this.FunctionsUtilService.formatCurrency(this.form.investment.num,\n                                                     this.form.investment.formatted);\n\n            this.form.investment.num = currencyObj.num;\n            this.form.investment.formatted = currencyObj.formatted;\n        }\n\n        /*\n        * Go to business page\n        * @description this method is launched when user press OK button\n        */\n        goToNext(): void {\n\n            //Get elementPos by Uid\n            var elementPos = this.FunctionsUtilService.getPositionByUid(this.$rootScope.User.Finance,\n                                                                        this.addInvestmentDataConfig.financeId);\n\n            //Update User model\n            this.$rootScope.User.Finance[elementPos].Income.Investment = this.form.investment;\n            //Save salary on firebase\n            this.FinanceService.saveFinance(this.$rootScope.User.Finance[elementPos]);\n\n            this.$state.go('page.business', {financeId: this.addInvestmentDataConfig.financeId});\n        }\n\n        /*\n        * Go to back method\n        * @description this method is launched when user press back button\n        */\n        goToBack(): void {\n            this.$ionicHistory.goBack();\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.pages.addInvestmentPage')\n        .controller(AddInvestmentPageController.controllerId, AddInvestmentPageController);\n\n}\n","/**\n* config()\n* @description - add business page config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('finApp.pages.addBusinessPage', [])\n        .config(config);\n\n    //config.$inject = ['ionic'];\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.business', {\n                url: '/business',\n                views: {\n                    'container': {\n                        templateUrl: 'templates/app/pages/addBusinessPage/addBusinessPage.html',\n                        controller: 'finApp.pages.addBusinessPage.AddBusinessPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                params: {\n                    financeId: null\n                }\n            });\n    }\n})();\n","/**\n * AddBusinessPageController\n * @description - Add Business Page Controller\n */\n\nmodule app.pages.addBusinessPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IAddBusinessPageController {\n        form: IAddBusinessForm;\n        activate: () => void;\n        goToNext: () => void;\n        goToBack: () => void;\n    }\n\n    export interface IAddBusinessDataConfig extends ng.ui.IStateParamsService {\n        financeId: string;\n    }\n\n    export interface IAddBusinessForm {\n        business: app.models.finance.IMoney;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class AddBusinessPageController implements IAddBusinessPageController {\n\n        static controllerId = 'finApp.pages.addBusinessPage.AddBusinessPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IAddBusinessForm;\n        addBusinessDataConfig: IAddBusinessDataConfig;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['dataConfig',\n                          '$ionicHistory',\n                          'finApp.models.finance.FinanceService',\n                          'finApp.core.util.FunctionsUtilService',\n                          '$state',\n                          '$stateParams',\n                          '$rootScope'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private dataConfig: IDataConfig,\n                    private $ionicHistory: ionic.navigation.IonicHistoryService,\n                    private FinanceService: app.models.finance.IFinanceService,\n                    private FunctionsUtilService: app.core.util.functionsUtil.FunctionsUtilService,\n                    private $state: ng.ui.IStateService,\n                    private $stateParams: IAddBusinessDataConfig,\n                    private $rootScope: app.interfaces.IFinAppRootScope) {\n                this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            //Init form\n            this.form = {\n                business: { num: null, formatted: '' }\n            };\n\n            this.addBusinessDataConfig = this.$stateParams;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            console.log('addBusinessPage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Format Business Method\n        * @description Format the business value with default currency\n        */\n        _formatBusiness(): void {\n            let currencyObj: app.models.finance.IMoney =\n            this.FunctionsUtilService.formatCurrency(this.form.business.num,\n                                                     this.form.business.formatted);\n\n            this.form.business.num = currencyObj.num;\n            this.form.business.formatted = currencyObj.formatted;\n        }\n\n        /*\n        * Go to necessary expenses page\n        * @description this method is launched when user press OK button\n        */\n        goToNext(): void {\n            //Get elementPos by Uid\n            var elementPos = this.FunctionsUtilService.getPositionByUid(this.$rootScope.User.Finance,\n                                                                        this.addBusinessDataConfig.financeId);\n\n            //Update User model\n            this.$rootScope.User.Finance[elementPos].Income.Business = this.form.business;\n            //Save salary on firebase\n            this.FinanceService.saveFinance(this.$rootScope.User.Finance[elementPos]);\n\n            this.$state.go('page.necessaryExpense', {financeId: this.addBusinessDataConfig.financeId});\n        }\n\n        /*\n        * Go to back method\n        * @description this method is launched when user press back button\n        */\n        goToBack(): void {\n            this.$ionicHistory.goBack();\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.pages.addBusinessPage')\n        .controller(AddBusinessPageController.controllerId, AddBusinessPageController);\n\n}\n","/**\n* config()\n* @description - add necessary expense page config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('finApp.pages.addNecessaryExpensePage', [])\n        .config(config);\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.necessaryExpense', {\n                url: '/necessaryExpense',\n                views: {\n                    'container': {\n                        templateUrl: 'templates/app/pages/addNecessaryExpensePage/addNecessaryExpensePage.html',\n                        controller: 'finApp.pages.addNecessaryExpensePage.AddNecessaryExpensePageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                params: {\n                    financeId: null\n                }\n            });\n    }\n})();\n","/**\n * AddNecessaryExpensePageController\n * @description - Add Necessary Expense Page Controller\n */\n\nmodule app.pages.addNecessaryExpensePage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IAddNecessaryExpensePageController {\n        form: IAddNecessaryExpenseForm;\n        activate: () => void;\n        showExpenseDetailPopup: (expense: app.models.finance.Expense) => void;\n        showTipPopup: () => void;\n        goToNext: () => void;\n        goToBack: () => void;\n    }\n\n    export interface IAddNecessaryExpensePageScope extends angular.IScope {\n        form: IAddNecessaryExpenseForm;\n        popupConfig: app.interfaces.IPopup;\n    }\n\n    export interface IAddNecessaryExpenseDataConfig extends ng.ui.IStateParamsService {\n        financeId: string;\n    }\n\n    export interface IAddNecessaryExpenseForm {\n        expense: any;\n        total?: app.models.finance.IMoney;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class AddNecessaryExpensePageController implements IAddNecessaryExpensePageController {\n\n        static controllerId = 'finApp.pages.addNecessaryExpensePage.AddNecessaryExpensePageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IAddNecessaryExpenseForm;\n        financePos: number;\n        addNecessaryExpenseDataConfig: IAddNecessaryExpenseDataConfig;\n        expensesList: Array<app.models.finance.Expense>;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['dataConfig',\n                          '$ionicHistory',\n                          '$ionicPopup',\n                          '$filter',\n                          'finApp.models.finance.FinanceService',\n                          'finApp.core.util.FunctionsUtilService',\n                          '$state',\n                          '$stateParams',\n                          '$scope',\n                          '$rootScope'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private dataConfig: IDataConfig,\n                    private $ionicHistory: ionic.navigation.IonicHistoryService,\n                    private $ionicPopup: ionic.popup.IonicPopupService,\n                    private $filter: angular.IFilterService,\n                    private FinanceService: app.models.finance.IFinanceService,\n                    private FunctionsUtilService: app.core.util.functionsUtil.FunctionsUtilService,\n                    private $state: ng.ui.IStateService,\n                    private $stateParams: IAddNecessaryExpenseDataConfig,\n                    private $scope: IAddNecessaryExpensePageScope,\n                    private $rootScope: app.interfaces.IFinAppRootScope) {\n\n            this.init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            //Init form\n            this.form = {\n                expense: new app.models.finance.Expense(),\n                total: { num: 0, formatted: '$0' }\n            };\n\n            this.addNecessaryExpenseDataConfig = this.$stateParams;\n\n            //Get Finance Position\n            this.financePos = this.FunctionsUtilService.getPositionByUid(this.$rootScope.User.Finance,\n                                                                         this.addNecessaryExpenseDataConfig.financeId);\n\n            this.expensesList = angular.copy(\n                this.$rootScope.User.Finance[this.financePos].TypeOfExpense.Necessaries\n            );\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            console.log('addNecessaryExpensePage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Show tip example expenses popup\n        * @description this method is launched when user press Gift icon in order to receive more information\n        */\n        showTipPopup(): void {\n            //VARIABLES\n            let self = this;\n            //CONSTANTS\n            const POPUP_BODY_CLASS = 'listPopup';\n            const POPUP_TITLE = this.$filter('translate')('%popup.tip.example.title.text');\n            const POPUP_OK_BUTTON_TEXT = this.$filter('translate')('%popup.tip.example.ok_button.text');\n            const POPUP_TIP_SUBTITLE_TEXT = this.$filter('translate')('%popup.tip.example.new_necessary_expense.subtitle.text');\n            const POPUP_TIP_EXAMPLE1_TEXT = this.$filter('translate')('%popup.tip.example.new_necessary_expense.example1.text');\n            const POPUP_TIP_EXAMPLE2_TEXT = this.$filter('translate')('%popup.tip.example.new_necessary_expense.example2.text');\n            const POPUP_TIP_EXAMPLE3_TEXT = this.$filter('translate')('%popup.tip.example.new_necessary_expense.example3.text');\n            const POPUP_TIP_EXAMPLE4_TEXT = this.$filter('translate')('%popup.tip.example.new_necessary_expense.example4.text');\n            const POPUP_TIP_EXAMPLE5_TEXT = this.$filter('translate')('%popup.tip.example.new_necessary_expense.example5.text');\n            const POPUP_TIP_EXAMPLE6_TEXT = this.$filter('translate')('%popup.tip.example.new_necessary_expense.example6.text');\n            const POPUP_TIP_EXAMPLE7_TEXT = this.$filter('translate')('%popup.tip.example.new_necessary_expense.example7.text');\n            const POPUP_TIP_EXAMPLE8_TEXT = this.$filter('translate')('%popup.tip.example.new_necessary_expense.example8.text');\n            const POPUP_OK_BUTTON_TYPE = 'button-positive';\n            //Assign popUp's text to $scope\n            self.$scope.popupConfig = {\n                subtitle: POPUP_TIP_SUBTITLE_TEXT,\n                textsList: [\n                    POPUP_TIP_EXAMPLE1_TEXT,\n                    POPUP_TIP_EXAMPLE2_TEXT,\n                    POPUP_TIP_EXAMPLE3_TEXT,\n                    POPUP_TIP_EXAMPLE4_TEXT,\n                    POPUP_TIP_EXAMPLE5_TEXT,\n                    POPUP_TIP_EXAMPLE6_TEXT,\n                    POPUP_TIP_EXAMPLE7_TEXT,\n                    POPUP_TIP_EXAMPLE8_TEXT\n                ]\n            };\n\n            this.$ionicPopup.show({\n                title: POPUP_TITLE,\n                template: '<fa-list-popup></fa-list-popup>',\n                cssClass: POPUP_BODY_CLASS,\n                scope: self.$scope,\n                buttons: [\n                    {\n                        text: POPUP_OK_BUTTON_TEXT,\n                        type: POPUP_OK_BUTTON_TYPE\n                    }\n                ]\n            });\n        }\n\n        /*\n        * show expense detail popup\n        * @description this method is launched when user press Add button in the header\n        */\n        showExpenseDetailPopup(expense: app.models.finance.Expense): void {\n            //VARIABLES\n            let self = this;\n\n            //CONSTANTS\n            const POPUP_BODY_CLASS = 'expenseDetailPopup';\n            const POPUP_TITLE = this.$filter('translate')('%popup.add_expense.title.text');\n            const POPUP_CANCEL_BUTTON_TEXT = this.$filter('translate')('%popup.general.cancel_button.text');\n            const POPUP_ADD_BUTTON_TEXT = this.$filter('translate')('%popup.add_expense.add_button.text');\n            const POPUP_ADD_NECESSARY_EXPENSE_SUBTITLE_TEXT = this.$filter('translate')('%popup.add_necessary_expense.subtitle.text');\n            const POPUP_ADD_BUTTON_TYPE = 'button-positive';\n\n            //Assign expense value to $scope\n            self.$scope.form = {\n                expense: expense ? expense : new app.models.finance.Expense()\n            };\n            //Assign popUp's text to $scope\n            self.$scope.popupConfig = {\n                subtitle: POPUP_ADD_NECESSARY_EXPENSE_SUBTITLE_TEXT\n            };\n\n            this.$ionicPopup.show({\n                title: POPUP_TITLE,\n                template: '<fa-expense-detail-popup></fa-expense-detail-popup>',\n                cssClass: POPUP_BODY_CLASS,\n                scope: self.$scope,\n                buttons: [\n                    { text: POPUP_CANCEL_BUTTON_TEXT },\n                    {\n                        text: POPUP_ADD_BUTTON_TEXT,\n                        type: POPUP_ADD_BUTTON_TYPE,\n                        onTap: function(e) {\n                            let expense = angular.copy(this.scope.vm.form.expense);\n                            self._addOrEditExpense(expense);\n                        }\n                    }\n                ]\n            });\n        }\n\n        /*\n        * Add or Edit Expense\n        * @description this method is launched when user press Add button on expenseDetailPopup\n        */\n        _addOrEditExpense(expense): void {\n            //Update User model\n            let expenseWithUid = this.$rootScope.User.Finance[this.financePos].TypeOfExpense.setNecessaries(expense);\n            //Update Finance Object on firebase\n            this.FinanceService.saveNecessaryExpense(expenseWithUid, this.addNecessaryExpenseDataConfig.financeId);\n            //Update expenses List view\n            this.expensesList = angular.copy(this.$rootScope.User.Finance[this.financePos].TypeOfExpense.Necessaries);\n            //Calculate Total Expenses\n            this._calculateTotalExpenses(this.expensesList);\n\n        }\n\n        /*\n        * Parse Expenses Object in order to calculate Total Expenses\n        * @description this method is launched when user press OK button\n        */\n        //TODO: Codigo duplicado en addUnnecessaryExpensePage.controller\n        _calculateTotalExpenses(expenses): void {\n            //Parse expenses Object\n\n            let expensesArray = expenses.map(function(obj){\n               return obj.value.num;\n            });\n\n            this.form.total.num = this.FinanceService.total(expensesArray);\n            this.form.total.formatted = this.form.total.num.toString();\n            this._formatTotal();\n        }\n\n        /*\n        * Format Total value Method\n        * @description Format the total value with default currency\n        */\n        //TODO: Codigo duplicado en addUnnecessaryExpensePage.controller\n        _formatTotal(): void {\n            let currencyObj: app.models.finance.IMoney =\n            this.FunctionsUtilService.formatCurrency(this.form.total.num,\n                                                     this.form.total.formatted);\n\n            this.form.total.num = currencyObj.num;\n            this.form.total.formatted = currencyObj.formatted;\n        }\n\n        /*\n        * Go to unneccesary page\n        * @description this method is launched when user press OK button\n        */\n        goToNext(): void {\n            this.$state.go('page.unnecessaryExpense',\n                           {financeId: this.addNecessaryExpenseDataConfig.financeId});\n        }\n\n        /*\n        * Go to back method\n        * @description this method is launched when user press back button\n        */\n        goToBack(): void {\n            this.$ionicHistory.goBack();\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.pages.addNecessaryExpensePage')\n        .controller(AddNecessaryExpensePageController.controllerId,\n                    AddNecessaryExpensePageController);\n}\n","/**\n* config()\n* @description - add salary page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('finApp.pages.addSalaryPage', [])\n        .config(config);\n\n    //config.$inject = ['ionic'];\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.salary', {\n                url: '/salary',\n                views: {\n                    'container': {\n                        templateUrl: 'templates/app/pages/addSalaryPage/addSalaryPage.html',\n                        controller: 'finApp.pages.addSalaryPage.AddSalaryPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                params: {\n                    financeId: null\n                }\n            });\n    }\n})();\n","/**\n * AddSalaryPageController\n * @description - Add Salary Page Controller\n */\n\nmodule app.pages.addSalaryPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IAddSalaryPageController {\n        form: IAddSalaryForm;\n        activate: () => void;\n        goToNext: () => void;\n        goToBack: () => void;\n    }\n\n    export interface IAddSalaryDataConfig extends ng.ui.IStateParamsService {\n        financeId: string;\n    }\n\n    export interface IAddSalaryForm {\n        salary: app.models.finance.IMoney;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class AddSalaryPageController implements IAddSalaryPageController {\n\n        static controllerId = 'finApp.pages.addSalaryPage.AddSalaryPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IAddSalaryForm;\n        addSalaryDataConfig: IAddSalaryDataConfig;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['dataConfig',\n                          '$ionicHistory',\n                          'finApp.models.finance.FinanceService',\n                          'finApp.core.util.FunctionsUtilService',\n                          '$state',\n                          '$stateParams',\n                          '$rootScope'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private dataConfig: IDataConfig,\n                    private $ionicHistory: ionic.navigation.IonicHistoryService,\n                    private FinanceService: app.models.finance.IFinanceService,\n                    private FunctionsUtilService: app.core.util.functionsUtil.FunctionsUtilService,\n                    private $state: ng.ui.IStateService,\n                    private $stateParams: IAddSalaryDataConfig,\n                    private $rootScope: app.interfaces.IFinAppRootScope) {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            //Init form\n            this.form = {\n                salary: { num: null, formatted: '' }\n            };\n\n            this.addSalaryDataConfig = this.$stateParams;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            console.log('addSalaryPage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Format Salary Method\n        * @description Format the salary value with default currency\n        */\n        _formatSalary(): void {\n            let currencyObj: app.models.finance.IMoney =\n            this.FunctionsUtilService.formatCurrency(this.form.salary.num,\n                                                     this.form.salary.formatted);\n            this.form.salary.num = currencyObj.num;\n            this.form.salary.formatted = currencyObj.formatted;\n        }\n\n        /*\n        * Go to investment page\n        * @description this method is launched when user press OK button\n        */\n        goToNext(): void {\n            //Get elementPos by Uid\n            var elementPos = this.FunctionsUtilService.getPositionByUid(this.$rootScope.User.Finance,\n                                                                        this.addSalaryDataConfig.financeId);\n            //Update User model\n            this.$rootScope.User.Finance[elementPos].Income.Salary = this.form.salary;\n            //Save salary on firebase\n            this.FinanceService.saveFinance(this.$rootScope.User.Finance[elementPos]);\n\n            this.$state.go('page.investment', {financeId: this.addSalaryDataConfig.financeId});\n        }\n\n        /*\n        * Go to back method\n        * @description this method is launched when user press back button\n        */\n        goToBack(): void {\n            this.$ionicHistory.goBack();\n        }\n\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.pages.addSalaryPage')\n        .controller(AddSalaryPageController.controllerId, AddSalaryPageController);\n\n}\n","/**\n* config()\n* @description - cards page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('finApp.pages.cardsPage', [])\n        .config(config);\n\n    //config.$inject = ['ionic'];\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('tabs.cards', {\n                url: '/cards',\n                views: {\n                    'tabs': {\n                        templateUrl: 'templates/app/pages/cardsPage/cardsPage.html',\n                        controller: 'finApp.pages.cardsPage.CardsPageController',\n                        controllerAs: 'vm'\n                    }\n                }\n            });\n    }\n})();\n","/**\n * CardsPageController\n * @description - Cards Page Controller\n */\n\nmodule app.pages.cardsPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ICardsPageController {\n        activate: () => void;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class CardsPageController implements ICardsPageController {\n\n        static controllerId = 'finApp.pages.cardsPage.CardsPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['$state'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $state: ng.ui.IStateService) {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            console.log('cardsPage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.pages.cardsPage')\n        .controller(CardsPageController.controllerId, CardsPageController);\n\n}\n","/**\n* config()\n* @description - add unnecessary expense page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('finApp.pages.addUnnecessaryExpensePage', [])\n        .config(config);\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.unnecessaryExpense', {\n                url: '/unnecessaryExpense',\n                views: {\n                    'container': {\n                        templateUrl: 'templates/app/pages/addUnnecessaryExpensePage/addUnnecessaryExpensePage.html',\n                        controller: 'finApp.pages.addUnnecessaryExpensePage.AddUnnecessaryExpensePageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                params: {\n                    financeId: null\n                }\n            });\n    }\n})();\n","/**\n* AddUnnecessaryExpensePageController\n* @description - Add Unnecessary Expense Page Controller\n*/\n\nmodule app.pages.addUnnecessaryExpensePage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IAddUnnecessaryExpensePageController {\n        form: IAddUnnecessaryExpenseForm;\n        activate: () => void;\n        showExpenseDetailPopup: (expense: app.models.finance.Expense) => void;\n        showTipPopup: () => void;\n        goToNext: () => void;\n        goToBack: () => void;\n    }\n\n    export interface IAddUnnecessaryExpensePageScope extends angular.IScope {\n        form: IAddUnnecessaryExpenseForm;\n        popupConfig: app.interfaces.IPopup;\n    }\n\n    export interface IAddUnnecessaryExpenseDataConfig extends ng.ui.IStateParamsService {\n        financeId: string;\n    }\n\n    export interface IAddUnnecessaryExpenseForm {\n        expense: any;\n        total?: app.models.finance.IMoney;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class AddUnnecessaryExpensePageController implements IAddUnnecessaryExpensePageController {\n\n        static controllerId = 'finApp.pages.addUnnecessaryExpensePage.AddUnnecessaryExpensePageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IAddUnnecessaryExpenseForm;\n        financePos: number;\n        addUnnecessaryExpenseDataConfig: IAddUnnecessaryExpenseDataConfig;\n        expensesList: Array<app.models.finance.Expense>;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['dataConfig',\n            '$ionicHistory',\n            '$ionicPopup',\n            '$filter',\n            'finApp.models.finance.FinanceService',\n            'finApp.core.util.FunctionsUtilService',\n            '$state',\n            '$stateParams',\n            '$scope',\n            '$rootScope'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private dataConfig: IDataConfig,\n            private $ionicHistory: ionic.navigation.IonicHistoryService,\n            private $ionicPopup: ionic.popup.IonicPopupService,\n            private $filter: angular.IFilterService,\n            private FinanceService: app.models.finance.IFinanceService,\n            private FunctionsUtilService: app.core.util.functionsUtil.FunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $stateParams: IAddUnnecessaryExpenseDataConfig,\n            private $scope: IAddUnnecessaryExpensePageScope,\n            private $rootScope: app.interfaces.IFinAppRootScope) {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            //Init form\n            this.form = {\n                expense: new app.models.finance.Expense(),\n                total: { num: 0, formatted: '$0' }\n            };\n\n            this.addUnnecessaryExpenseDataConfig = this.$stateParams;\n\n            //Get Finance Position\n            this.financePos = this.FunctionsUtilService.getPositionByUid(this.$rootScope.User.Finance,\n                this.addUnnecessaryExpenseDataConfig.financeId);\n\n            this.expensesList = angular.copy(\n                this.$rootScope.User.Finance[this.financePos].TypeOfExpense.Unnecessaries\n            );\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            console.log('addUnnecessaryExpensePage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Show tip example expenses popup\n        * @description this method is launched when user press Gift icon in order to receive more information\n        */\n        //TODO: Puedo hacer una clase base, para que los gastos hereden estos metodos como showTipPopup.\n        showTipPopup(): void {\n            //VARIABLES\n            let self = this;\n            //CONSTANTS\n            const POPUP_BODY_CLASS = 'listPopup';\n            const POPUP_TITLE = this.$filter('translate')('%popup.tip.example.title.text');\n            const POPUP_OK_BUTTON_TEXT = this.$filter('translate')('%popup.tip.example.ok_button.text');\n            const POPUP_TIP_SUBTITLE_TEXT = this.$filter('translate')('%popup.tip.example.new_unnecessary_expense.subtitle.text');\n            const POPUP_TIP_EXAMPLE1_TEXT = this.$filter('translate')('%popup.tip.example.new_unnecessary_expense.example1.text');\n            const POPUP_TIP_EXAMPLE2_TEXT = this.$filter('translate')('%popup.tip.example.new_unnecessary_expense.example2.text');\n            const POPUP_TIP_EXAMPLE3_TEXT = this.$filter('translate')('%popup.tip.example.new_unnecessary_expense.example3.text');\n            const POPUP_TIP_EXAMPLE4_TEXT = this.$filter('translate')('%popup.tip.example.new_unnecessary_expense.example4.text');\n            const POPUP_TIP_EXAMPLE5_TEXT = this.$filter('translate')('%popup.tip.example.new_unnecessary_expense.example5.text');\n            const POPUP_TIP_EXAMPLE6_TEXT = this.$filter('translate')('%popup.tip.example.new_unnecessary_expense.example6.text');\n            const POPUP_TIP_EXAMPLE7_TEXT = this.$filter('translate')('%popup.tip.example.new_unnecessary_expense.example7.text');\n            const POPUP_TIP_EXAMPLE8_TEXT = this.$filter('translate')('%popup.tip.example.new_unnecessary_expense.example8.text');\n            const POPUP_OK_BUTTON_TYPE = 'button-positive';\n            //Assign popUp's text to $scope\n            self.$scope.popupConfig = {\n                subtitle: POPUP_TIP_SUBTITLE_TEXT,\n                textsList: [\n                    POPUP_TIP_EXAMPLE1_TEXT,\n                    POPUP_TIP_EXAMPLE2_TEXT,\n                    POPUP_TIP_EXAMPLE3_TEXT,\n                    POPUP_TIP_EXAMPLE4_TEXT,\n                    POPUP_TIP_EXAMPLE5_TEXT,\n                    POPUP_TIP_EXAMPLE6_TEXT,\n                    POPUP_TIP_EXAMPLE7_TEXT,\n                    POPUP_TIP_EXAMPLE8_TEXT\n                ]\n            };\n\n            this.$ionicPopup.show({\n                title: POPUP_TITLE,\n                template: '<fa-list-popup></fa-list-popup>',\n                cssClass: POPUP_BODY_CLASS,\n                scope: self.$scope,\n                buttons: [\n                    {\n                        text: POPUP_OK_BUTTON_TEXT,\n                        type: POPUP_OK_BUTTON_TYPE\n                    }\n                ]\n            });\n        }\n\n        /*\n        * show expense detail popup\n        * @description this method is launched when user press Add button in the header\n        */\n        showExpenseDetailPopup(expense: app.models.finance.Expense): void {\n            //VARIABLES\n            let self = this;\n            //CONSTANTS\n            const POPUP_BODY_CLASS = 'expenseDetailPopup';\n            const POPUP_TITLE = this.$filter('translate')('%popup.add_expense.title.text');\n            const POPUP_CANCEL_BUTTON_TEXT = this.$filter('translate')('%popup.general.cancel_button.text');\n            const POPUP_ADD_BUTTON_TEXT = this.$filter('translate')('%popup.add_expense.add_button.text');\n            const POPUP_ADD_UNNECESSARY_EXPENSE_SUBTITLE_TEXT = this.$filter('translate')('%popup.add_unnecessary_expense.subtitle.text');\n            const POPUP_ADD_BUTTON_TYPE = 'button-positive';\n\n            //Assign expense value\n            self.$scope.form = {\n                expense: expense ? expense : new app.models.finance.Expense()\n            };\n            //Assign popUp's text to $scope\n            self.$scope.popupConfig = {\n                subtitle: POPUP_ADD_UNNECESSARY_EXPENSE_SUBTITLE_TEXT\n            };\n\n            this.$ionicPopup.show({\n                title: POPUP_TITLE,\n                template: '<fa-expense-detail-popup></fa-expense-detail-popup>',\n                cssClass: POPUP_BODY_CLASS,\n                scope: self.$scope,\n                buttons: [\n                    { text: POPUP_CANCEL_BUTTON_TEXT },\n                    {\n                        text: POPUP_ADD_BUTTON_TEXT,\n                        type: POPUP_ADD_BUTTON_TYPE,\n                        onTap: function(e) {\n                            let expense = angular.copy(this.scope.vm.form.expense);\n                            self._addOrEditExpense(expense);\n                        }\n                    }\n                ]\n            });\n        }\n\n        /*\n        * Add or Edit Expense\n        * @description this method is launched when user press Add button on expenseDetailPopup\n        */\n        _addOrEditExpense(expense): void {\n            //Update User model\n            let expenseWithUid = this.$rootScope.User.Finance[this.financePos].TypeOfExpense.setUnnecessaries(expense);\n            //Save unnecessary expense on firebase\n            this.FinanceService.saveUnnecessaryExpense(expenseWithUid, this.addUnnecessaryExpenseDataConfig.financeId);\n            //Update expenses List view\n            this.expensesList = angular.copy(this.$rootScope.User.Finance[this.financePos].TypeOfExpense.Unnecessaries);\n            //Calculate Total Expenses\n            this._calculateTotalExpenses(this.expensesList);\n\n        }\n\n        /*\n        * Parse Expenses Object in order to calculate Total Expenses\n        * @description this method is launched when user press OK button\n        */\n        //TODO: Codigo duplicado en addNecessaryExpensePage.controller\n        _calculateTotalExpenses(expenses): void {\n            //Parse expenses Object\n\n            let expensesArray = expenses.map(function(obj) {\n                return obj.value.num;\n            });\n\n            this.form.total.num = this.FinanceService.total(expensesArray);\n            this.form.total.formatted = this.form.total.num.toString();\n            this._formatTotal();\n        }\n\n        /*\n        * Format Business Method\n        * @description Format the business value with default currency\n        */\n        //TODO: Codigo duplicado en addNecessaryExpensePage.controller\n        _formatTotal(): void {\n            let currencyObj: app.models.finance.IMoney =\n                this.FunctionsUtilService.formatCurrency(this.form.total.num,\n                    this.form.total.formatted);\n\n            this.form.total.num = currencyObj.num;\n            this.form.total.formatted = currencyObj.formatted;\n        }\n\n        /*\n        * Go to business page\n        * @description this method is launched when user press OK button\n        */\n        goToNext(): void {\n            this.$state.go('tabs.history');\n        }\n\n        /*\n        * Go to back method\n        * @description this method is launched when user press back button\n        */\n        goToBack(): void {\n            this.$ionicHistory.goBack();\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.pages.addUnnecessaryExpensePage')\n        .controller(AddUnnecessaryExpensePageController.controllerId, AddUnnecessaryExpensePageController);\n}\n","/**\n* config()\n* @description - history page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('finApp.pages.historyPage', [])\n        .config(config);\n\n    //config.$inject = ['ionic'];\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('tabs.history', {\n                url: '/history',\n                views: {\n                    'tabs': {\n                        templateUrl: 'templates/app/pages/historyPage/historyPage.html',\n                        controller: 'finApp.pages.historyPage.HistoryPageController',\n                        controllerAs: 'vm'\n                    }\n                }\n            });\n    }\n})();\n","/**\n * DashboardPageController\n * @description - Dashboard Page Controller\n */\n\nmodule app.pages.historyPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IHistoryPageController {\n        activate: () => void;\n    }\n\n    export interface IHistoryDataConfig extends ng.ui.IStateParamsService {\n\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class HistoryPageController implements IHistoryPageController {\n\n        static controllerId = 'finApp.pages.historyPage.HistoryPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        historyDataConfig: IHistoryDataConfig;\n        financesList: Array<any>;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['dataConfig',\n                          'finApp.models.finance.FinanceService',\n                          'finApp.core.util.FunctionsUtilService',\n                          '$state',\n                          '$stateParams',\n                          '$filter',\n                          '$rootScope'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private dataConfig: IDataConfig,\n                    private FinanceService: app.models.finance.IFinanceService,\n                    private FunctionsUtilService: app.core.util.functionsUtil.FunctionsUtilService,\n                    private $state: ng.ui.IStateService,\n                    private $stateParams: IHistoryDataConfig,\n                    private $filter: angular.IFilterService,\n                    private $rootScope: app.interfaces.IFinAppRootScope) {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n\n            this.historyDataConfig = this.$stateParams;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('historyPage controller actived');\n            //VARIABLES\n            let self = this;\n\n            //Get All User's finances in order to draw each block\n            this._getFinances().then(function(finances:any){\n                //grouping by year\n                self.financesList = self._groupByYear(finances);\n            });\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n        _getFinances(): angular.IPromise<Array<app.models.finance.Finance>> {\n            return this.FinanceService.getAllFinances().then(function(finances){\n                return finances;\n            });\n        }\n\n\n        _getTotalIncomes(incomes): number {\n            //VARIABLES\n            var incomesToArray = [];\n            let total = 0;\n\n            for (let key in incomes) {\n                incomesToArray.push(incomes[key].num || 0);\n            }\n\n            total = this.FinanceService.total(incomesToArray);\n            return total;\n        }\n\n\n        _getTotalExpenses(expenses): number {\n            //VARIABLES\n            var expensesToArray = [];\n            let total = 0;\n\n            for (let type in expenses) {\n\n                for (let key in expenses[type]) {\n                    expensesToArray.push(expenses[type][key].value.num || 0);\n                }\n\n            }\n\n            total = this.FinanceService.total(expensesToArray);\n            return total;\n        }\n\n\n        _groupByYear(finances): Array<any> {\n            //VARIABLES\n            var groups = {};\n            var result = [];\n\n            for(var i = 0; i < finances.length; i++) {\n                //CONSTANTS\n                const ZONE = this.$filter('translate')('%global.zone');\n                //VARIABLES\n                var item = finances[i];\n                let totalIncomes = this._getTotalIncomes(item.income);\n                let totalIncomesFormatted = this.FunctionsUtilService.formatCurrency(totalIncomes, '');\n                let totalExpenses = this._getTotalExpenses(item.typeOfExpense);\n                let totalExpensesFormatted = this.FunctionsUtilService.formatCurrency(totalExpenses, '');\n                let totalSaving = this.FinanceService.getSaving(totalIncomes, totalExpenses);\n                let totalSavingFormatted = this.FunctionsUtilService.formatCurrency(totalSaving, '');\n\n                if(!groups[item.dateCreated.year]) {\n                    groups[item.dateCreated.year] = [];\n                }\n\n                groups[item.dateCreated.year].push({\n                    date: new Date(item.dateCreated.complete),\n                    month: this.FunctionsUtilService.dateMonthToString(item.dateCreated.complete, ZONE),\n                    finances: {\n                        incomes: totalIncomesFormatted,\n                        expenses: totalExpensesFormatted,\n                        saving: totalSavingFormatted\n                    }\n                });\n            }\n\n            for(var x in groups) {\n                if(Object.prototype.hasOwnProperty.call(groups, x)) {\n                    var obj = {};\n                    obj[x] = groups[x];\n                    result.push(obj);\n                }\n            }\n\n            return result;\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.pages.historyPage')\n        .controller(HistoryPageController.controllerId, HistoryPageController);\n\n}\n","/**\n* config()\n* @description - log in page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('finApp.pages.logInPage', [])\n        .config(config);\n\n    //config.$inject = ['ionic'];\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.logIn', {\n                url: '/logIn',\n                views: {\n                    'container': {\n                        templateUrl: 'templates/app/pages/logInPage/logInPage.html',\n                        controller: 'finApp.pages.logInPage.LogInPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                params: {\n                    user: null\n                },\n                // resolve: {\n                //     requireNoAuth: function($state, $firebaseAuth, FirebaseFactory) {\n                //         let ref = FirebaseFactory.createFirebase();\n                //         let auth = $firebaseAuth(ref);\n                //         return auth.$requireAuth().then(function(auth) {\n                //             $state.go('home');\n                //         }, function(error) {\n                //             return;\n                //         });\n                //     }\n                // },\n                parent: 'page'\n            });\n    }\n})();\n","/**\n * SignUpPageController\n * @description - Log In Page Controller (Page where app asks about password or logIn with Facebook)\n */\n\nmodule app.pages.logInPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ILogInPageController {\n        form: ILogInForm;\n        ref: Firebase;\n        error: ILogInError;\n        activate: () => void;\n    }\n\n    export interface ILogInForm {\n        password: string;\n    }\n\n    export interface ILogInError {\n        message: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class LogInPageController implements ILogInPageController {\n\n        static controllerId = 'finApp.pages.logInPage.LogInPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ILogInForm;\n        ref: Firebase;\n        error: ILogInError;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['$ionicHistory',\n                          '$state',\n                          'finApp.auth.AuthService',\n                          '$rootScope'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $ionicHistory: ionic.navigation.IonicHistoryService,\n                    private $state: ng.ui.IStateService,\n                    private AuthService,\n                    private $rootScope: app.interfaces.IFinAppRootScope) {\n\n            this.init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            //Init form\n            this.form = {\n                password: ''\n            };\n\n            this.error = {\n                message: ''\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            console.log('logInPage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Login Method\n        * @description If current user has an account, it asks a valid password\n        *              in order to give authorization\n        */\n        login(): void {\n            let self = this;\n\n            //Create temporal User object with email and password data\n            let currentDataUser = {\n                email: this.$rootScope.User.Email,\n                password: this.form.password\n            };\n            this.AuthService.getRef().$authWithPassword(currentDataUser).then(\n                function (authData){\n                    //TODO: Si se loguea exitosamente debe llevarlo directamente a: 1. addSalaryPage\n                    // si es la primera vez que usa la App, 2. dashboard o pantalla principal, donde le\n                    // muestre los meses, las tarjetas, etc etc.\n                    self.$rootScope.User.Uid = authData.uid;\n                    //TODO: Revisar muy bien este tema, por que no deberia crear otro elemento Finance\n                    // para el array de Finances, ya que el usuario deberia editar una finanza nueva\n                    //Create User Finance object\n                    let newFinance = self.$rootScope.User.setFinance(new app.models.finance.Finance());\n                    self.$state.go('page.salary', {financeId: newFinance.Uid});\n                    console.log('Authenticated successfully with payload:', authData);\n                }, function (error){\n                    //TODO: Validar si tiene mal el password, mostrando un mensaje o popUp nativo del dispositivo\n                    self.error = error;\n                    console.log('Login Failed!', error);\n                }\n            );\n        }\n\n        /*\n        * Go to back method\n        * @description this method is launched when user press back button\n        */\n        goToBack(): void {\n            this.$ionicHistory.goBack();\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.pages.logInPage')\n        .controller(LogInPageController.controllerId, LogInPageController);\n\n}\n","/**\r\n* config()\r\n* @description - main page config file\r\n*/\r\n\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('finApp.pages.main', [])\r\n        .config(config);\r\n\r\n    //config.$inject = ['ionic'];\r\n\r\n    function config($stateProvider: angular.ui.IStateProvider) {\r\n\r\n        $stateProvider\r\n            .state('page', {\r\n                url: '/page',\r\n                abstract: true,\r\n                template: '<ion-nav-view name=\"container\"></ion-nav-view>',\r\n                controller: 'finApp.pages.main.MainController',\r\n                controllerAs: 'vm'\r\n            });\r\n\r\n\r\n    }\r\n})();\r\n","/**\n * MainController\n * @description - Main Page Controller\n */\n\nmodule app.pages.main {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IMainController {\n        activate: () => void;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class MainController implements IMainController {\n\n        static controllerId = 'finApp.pages.main.MainController';\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            console.log('main controller actived');\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.pages.main')\n        .controller(MainController.controllerId, MainController);\n\n}\n","/**\n* config()\n* @description - profile page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('finApp.pages.profilePage', [])\n        .config(config);\n\n    //config.$inject = ['ionic'];\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('tabs.profile', {\n                url: '/profile',\n                views: {\n                    'tabs': {\n                        templateUrl: 'templates/app/pages/profilePage/profilePage.html',\n                        controller: 'finApp.pages.profilePage.ProfilePageController',\n                        controllerAs: 'vm'\n                    }\n                }\n            });\n    }\n})();\n","/**\n * CardsPageController\n * @description - Profile Page Controller\n */\n\nmodule app.pages.profilePage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IProfilePageController {\n        activate: () => void;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class ProfilePageController implements IProfilePageController {\n\n        static controllerId = 'finApp.pages.profilePage.ProfilePageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['$state'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $state: ng.ui.IStateService) {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            console.log('profilePage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.pages.profilePage')\n        .controller(ProfilePageController.controllerId, ProfilePageController);\n\n}\n","/**\r\n* config()\r\n* @description - tutorial page config file\r\n*/\r\n\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('finApp.pages.tutorialPage', [])\r\n        .config(config);\r\n\r\n    //config.$inject = ['ionic'];\r\n\r\n    function config($stateProvider: angular.ui.IStateProvider) {\r\n\r\n        $stateProvider\r\n            .state('page.tutorial', {\r\n                url: '/tutorial',\r\n                views: {\r\n                    'container': {\r\n                        templateUrl: 'templates/app/pages/tutorialPage/tutorialPage.html',\r\n                        controller: 'finApp.pages.tutorialPage.TutorialPageController',\r\n                        controllerAs: 'vm'\r\n                    }\r\n                },\r\n                parent: 'page'\r\n            });\r\n    }\r\n})();\r\n","/**\n * TutorialPageController\n * @description - Tutorial Page Controller\n */\n\nmodule app.pages.tutorialPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITutorialPageController {\n        activate: () => void;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TutorialPageController implements ITutorialPageController {\n\n        static controllerId = 'finApp.pages.tutorialPage.TutorialPageController';\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            console.log('tutorialPage controller actived');\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.pages.tutorialPage')\n        .controller(TutorialPageController.controllerId, TutorialPageController);\n\n}\n","/**\n* config()\n* @description - sign up page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('finApp.pages.signUpPage', [])\n        .config(config);\n\n    //config.$inject = ['ionic'];\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.signUp', {\n                url: '/signUp',\n                views: {\n                    'container': {\n                        templateUrl: 'templates/app/pages/signUpPage/signUpPage.html',\n                        controller: 'finApp.pages.signUpPage.SignUpPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                params: {\n                    user: null\n                },\n                // resolve: {\n                //     requireNoAuth: function($state, $firebaseAuth, FirebaseFactory) {\n                //         let ref = FirebaseFactory.createFirebase();\n                //         let auth = $firebaseAuth(ref);\n                //         return auth.$requireAuth().then(function(auth) {\n                //             $state.go('page.salary');\n                //         }, function(error) {\n                //             console.log('Error from requireNoAuth: ', error);\n                //             return;\n                //         });\n                //     }\n                // },\n                parent: 'page'\n            });\n    }\n})();\n","/**\n * SignUpPageController\n * @description - Sign up Page Controller\n */\n\nmodule app.pages.signUpPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ISignUpPageController {\n        ref: Firebase;\n        form: ISignUpForm;\n        error: ISignUpError;\n        register: () => void;\n        goToBack: () => void;\n        activate: () => void;\n    }\n\n    export interface ISignUpForm {\n        email: string;\n    }\n\n    export interface ISignUpError {\n        message: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class SignUpPageController implements ISignUpPageController {\n\n        static controllerId = 'finApp.pages.signUpPage.SignUpPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        ref: Firebase;\n        form: ISignUpForm;\n        error: ISignUpError;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = ['$ionicHistory',\n            '$ionicPopup',\n            '$state',\n            'finApp.auth.AuthService',\n            '$filter',\n            'finApp.models.user.UserService',\n            '$scope',\n            '$rootScope'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $ionicHistory: ionic.navigation.IonicHistoryService,\n            private $ionicPopup: ionic.popup.IonicPopupService,\n            private $state: ng.ui.IStateService,\n            private AuthService,\n            private $filter: angular.IFilterService,\n            private UserService: app.models.user.IUserService,\n            private $scope: angular.IScope,\n            private $rootScope: app.interfaces.IFinAppRootScope) {\n\n            this.init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n\n            //Init form\n            this.form = {\n                email: ''\n            };\n\n            this.error = {\n                message: ''\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('signUpPage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Register Method\n        * @description Create new user if current user doesn`t have an account\n        */\n        register(): void {\n\n            let self = this;\n            //CONSTANTS\n            const POPUP_TITLE = this.$filter('translate')('%popup.create_user.title.text');\n            const POPUP_BODY_TEXT = this.$filter('translate')('%popup.create_user.body_message.text');\n            const POPUP_CANCEL_BUTTON_TEXT = this.$filter('translate')('%popup.general.cancel_button.text');\n            const POPUP_OK_BUTTON_TEXT = this.$filter('translate')('%popup.create_user.ok_button.text');\n            const POPUP_OK_BUTTON_TYPE = 'button-positive';\n            /********************/\n\n            //Save new email in User object\n            this.$rootScope.User.Email = this.form.email;\n\n            //Validate if the email already exist on database\n            this.UserService.existUserByEmail(this.$rootScope.User.Email).then(function(isExist){\n\n                //user exist in database\n                if (isExist) {\n                    self.$state.go('page.logIn');\n                } else {\n                    /*  Show popUp in order to warn the user that if he/she doesn't have account,\n                        we are going to create new one */\n                    self.$ionicPopup.show({\n                        title: POPUP_TITLE,\n                        template: POPUP_BODY_TEXT,\n                        buttons: [\n                            { text: POPUP_CANCEL_BUTTON_TEXT },\n                            {\n                                text: POPUP_OK_BUTTON_TEXT,\n                                type: POPUP_OK_BUTTON_TYPE,\n                                onTap: function(e) {\n                                    self._createAccount(e);\n                                }\n                            }\n                        ]\n                    });\n                }\n            });\n\n        };\n\n        /*\n        * Create Account\n        * @description Create Account on FireBase\n        */\n        _createAccount(event): void {\n            //LOG\n            console.log('onTap Button Event: ', event);\n            //VARIABLES\n            let self = this;\n            let currentDataUser = {\n                email: this.$rootScope.User.Email,\n                password: '1234'\n            };\n            let auth = self.AuthService.getRef();\n\n            //Create Account on Firebase Accounting System\n            auth.$createUser(currentDataUser).then(function(user) {\n                //LOG\n                console.log('created new user in FireBase Auth System: ', user);\n                //Authenticate user\n                self._authWithPassword(auth, currentDataUser);\n\n            }, function(error) {\n\n                if (error.code === 'EMAIL_TAKEN') {\n                    console.log('this user already has an account');\n                    self.$state.go('page.logIn');\n                } else {\n                    self.error = error;\n                }\n            });\n        }\n\n        /*\n        * authWithPassword\n        * @description Authenticated User with password method\n        */\n        _authWithPassword(authRef, user): void {\n            let self = this;\n            /*  After created successfully account, authenticates the client using\n                email / password combination */\n            authRef.$authWithPassword(user).then(\n                function (authData){\n                    //LOG\n                    console.log('Authenticated successfully with payload:', authData);\n                    //Add provider property\n                    self.$rootScope.User.Uid = authData.uid;\n                    self.$rootScope.User.Provider = authData.provider;\n                    //Create new User in dataBase and make three binding ways\n                    self.UserService.createUser(self.$rootScope.User, function(err){\n                        if (err) {\n                            //LOG\n                            console.log('Error: Not created user');\n                        } else {\n                            //Create User Finance object\n                            let newFinance = self.$rootScope.User.setFinance(new app.models.finance.Finance());\n                            self.$state.go('page.salary', {financeId: newFinance.Uid});\n                        }\n                    });\n\n                }, function (error){\n                    self.error = error;\n                    //LOG\n                    console.log('Login Failed!', error);\n                }\n            );\n        }\n\n        /*\n        * Go to back method\n        * @description this method is launched when user press back button\n        */\n        goToBack(): void {\n            this.$ionicHistory.goBack();\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.pages.signUpPage')\n        .controller(SignUpPageController.controllerId, SignUpPageController);\n\n}\n\n\n/* -- IMPORTANT NOTE -- */\n//Bindea el 'user' con la vista y la base de datos\n/*this.$scope.user = new app.models.User();\nvar _this = this;\nthis.User.getUserByEmail('sergioruizdavila22').$bindTo(this.$scope, 'user').then(function(){\n    _this.$scope.user.username = 'Pablo Pedro';\n});*/\n","/**\n* config()\n* @description - Expense Detail Popup config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('finApp.components.faListPopup', [])\n        .config(config);\n\n    function config() {\n        console.log('faListPopup config launched');\n    }\n})();\n","/**\n* ListPopupController\n* @description - List Popup Directive\n* @example - <fa-list-popup></fa-list-popup>\n*/\n\nmodule components.popup.listPopup {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IListPopup extends angular.IDirective {\n\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    class FaListPopup implements IListPopup {\n\n        static directiveId = 'faListPopup';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        bindToController: Boolean = true;\n        controller = ListPopupController.controllerId;\n        controllerAs: string = 'vm';\n        restrict: string = 'E';\n        templateUrl: string = 'templates/components/popup/listPopup/listPopup.html';\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['dataConfig'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(dataConfig: IDataConfig) {\n            console.log('faListPopup directive constructor');\n        }\n\n        link($scope: angular.IScope, elm: Element, attr: angular.IAttributes): void {\n            console.log('faListPopup link function');\n        }\n\n        /*-- INSTANCE FUNCTION --*/\n        static instance(dataConfig: IDataConfig): IListPopup {\n            return new FaListPopup(dataConfig);\n        }\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.components.faListPopup')\n        .directive(FaListPopup.directiveId, FaListPopup.instance);\n\n\n    /*********************************************************/\n    /*                     CONTROLLER                        */\n    /*********************************************************/\n    /**\n    * ListPopupController\n    * @description - List Popup Controller\n    */\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IListPopupController {\n        activate: () => void;\n    }\n\n    export interface IListPopupScope extends angular.IScope {\n        popupConfig: app.interfaces.IPopup;\n        $parent: IListPopupScope;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class ListPopupController implements IListPopupController {\n\n        static controllerId = 'finApp.components.ListPopupController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        list: Array<string>;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['$scope', 'finApp.core.util.FunctionsUtilService'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(public $scope: IListPopupScope,\n                    private FunctionsUtilService: app.core.util.functionsUtil.FunctionsUtilService) {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            this.list = this.$scope.$parent.popupConfig.textsList;\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            console.log('listPopup controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular.module('finApp.components.faListPopup')\n        .controller(ListPopupController.controllerId, ListPopupController);\n\n}\n","/**\n* config()\n* @description - Expense Detail Popup config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('finApp.components.faExpenseDetailPopup', [])\n        .config(config);\n\n    function config() {\n        console.log('faExpenseDetailPopup config launched');\n    }\n})();\n","/**\n* ExpenseDetailPopupController\n* @description - Expense Detail Popup Directive\n* @example - <fa-expense-detail-popup></fa-expense-detail-popup>\n*/\n\nmodule components.popup.expenseDetailPopup {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IExpenseDetailPopup extends angular.IDirective {\n\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    class FaExpenseDetailPopup implements IExpenseDetailPopup {\n\n        static directiveId = 'faExpenseDetailPopup';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        bindToController: Boolean = true;\n        controller = ExpenseDetailPopupController.controllerId;\n        controllerAs: string = 'vm';\n        restrict: string = 'E';\n        templateUrl: string = 'templates/components/popup/expenseDetailPopup/expenseDetailPopup.html';\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['dataConfig'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(dataConfig: IDataConfig) {\n            console.log('faExpenseDetailPopup directive constructor');\n        }\n\n        link($scope: angular.IScope, elm: Element, attr: angular.IAttributes): void {\n            console.log('faExpenseDetailPopup link function');\n        }\n\n        /*-- INSTANCE FUNCTION --*/\n        static instance(dataConfig: IDataConfig): IExpenseDetailPopup {\n            return new FaExpenseDetailPopup(dataConfig);\n        }\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('finApp.components.faExpenseDetailPopup')\n        .directive(FaExpenseDetailPopup.directiveId, FaExpenseDetailPopup.instance);\n\n\n    /*********************************************************/\n    /*                     CONTROLLER                        */\n    /*********************************************************/\n    /**\n    * ExpenseDetailPopupController\n    * @description - Expense Detail Popup Controller\n    */\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IExpenseDetailPopupController {\n        form: IExpenseDetailPopupForm;\n        formatExpense: () => void;\n        activate: () => void;\n    }\n\n    export interface IExpenseDetailPopupScope extends angular.IScope {\n        popupConfig: app.interfaces.IPopup;\n        form: IExpenseDetailPopupForm;\n        $parent: IExpenseDetailPopupScope;\n    }\n\n    export interface IExpenseDetailPopupForm {\n        expense: app.models.finance.IExpense;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class ExpenseDetailPopupController implements IExpenseDetailPopupController {\n\n        static controllerId = 'finApp.components.ExpenseDetailPopupController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IExpenseDetailPopupForm;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['$scope', 'finApp.core.util.FunctionsUtilService'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(public $scope: IExpenseDetailPopupScope,\n                    private FunctionsUtilService: app.core.util.functionsUtil.FunctionsUtilService) {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            //Init form\n            this.form = {\n                expense: this.$scope.$parent.form.expense\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            console.log('expenseDetailPopup controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Format Expense Method\n        * @description Format the expense value with default currency\n        */\n        formatExpense(): void {\n            let currencyObj: app.models.finance.IMoney =\n            this.FunctionsUtilService.formatCurrency(this.form.expense.value.num,\n                                                     this.form.expense.value.formatted);\n\n            this.form.expense.value.num = currencyObj.num;\n            this.form.expense.value.formatted = currencyObj.formatted;\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular.module('finApp.components.faExpenseDetailPopup')\n        .controller(ExpenseDetailPopupController.controllerId, ExpenseDetailPopupController);\n\n}\n","/**\n * Specifies the Interfaces throughout App\n */\n\nmodule app.interfaces {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n\n    export interface IFinAppRootScope extends angular.IRootScopeService {\n        User: app.models.user.UserFirebase;\n    }\n\n    export interface IDateFormatted {\n        complete: string;\n        day: string;\n        month: string;\n        year: string;\n    }\n\n    export interface IPopup {\n        subtitle?: string;\n        textsList?: Array<string>;\n    }\n\n}\n","/**\n* functionsUtilService\n* @description - Service with util functions used accross the whole application\n* @constructor\n*/\n\nmodule app.core.util.functionsUtil {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IFunctionsUtilService {\n        dateFormatted: app.interfaces.IDateFormatted;\n        dateMonthToString: (date: string, zone: string) => string;\n        getPositionByUid: (array: Array<any>, uid: string) => number;\n        groupByYear: (array: Array<any>) => any;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class FunctionsUtilService implements IFunctionsUtilService {\n\n        static serviceId = 'finApp.core.util.FunctionsUtilService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        dateFormatted: app.interfaces.IDateFormatted;\n        // --------------------------------\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            console.log('functionsUtil service called');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Split Date Format Method\n        * @description Split Date in 3 parts: day, month and year\n        */\n        public static splitDateFormat(date: string): app.interfaces.IDateFormatted {\n            //Format date to MM/DD/YYYY\n            let dateString = moment(date).format('YYYY/MMM/DD').split('/');\n            //Split date to day, month and year\n            let dateFormatted = {\n                complete: date,\n                day: dateString[2],\n                month: dateString[1],\n                year: dateString[0]\n            };\n\n            return dateFormatted;\n        }\n\n        /**\n        * dateMonthToString\n        * @description - format month to long string (example: 'November')\n        * @use - this.FinanceService.dateMonthToString('Mon May 01 2016 01:23:34 GMT-0500 (COT)', 'es-ES');\n        * @function\n        * @params {string} date - complete date\n        * @params {string} zone - specific the language zone (example: 'en-US', 'es-ES')\n        * @return {string} month - Returns month formatted to long string (example: 'November')\n        */\n        dateMonthToString(date, zone): string {\n            //VARIABLES\n            var dateFormatted = new Date(date);\n            var options = {month: \"long\"};\n            var month = dateFormatted.toLocaleDateString(zone, options);\n            return month;\n        }\n\n        /**\n        * formatCurrency\n        * @description - format a number to currency string\n        * @function\n        * @params {number} num - number without format\n        * @params {string} formatted - number formatted (if you don't have this value, please send '')\n        * @return {object} currency - Returns an object with 2 properties: num - number without format\n        * and formatted - number formatted.\n        */\n        formatCurrency(num: number, formatted: string): app.models.finance.IMoney {\n\n            let currency = {\n                num: num,\n                formatted: formatted\n            };\n\n            if (currency.formatted) {\n                currency.num = accounting.unformat(currency.formatted);\n            }\n            //TODO: Remove '$' hardcode, change it with some variable\n            currency.formatted = accounting.formatMoney(currency.num, '$', 0);\n\n            return currency;\n\n        }\n\n        /**\n        * generateGuid\n        * @description - generate Guid id string\n        * @function\n        * @return {string} guid - Returns an Guid Id string.\n        */\n        public static generateGuid(): string {\n            var fmt = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n            var guid = fmt.replace(/[xy]/g, function (c) {\n                var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n                return v.toString(16);\n            });\n            return guid;\n        }\n\n        /**\n        * getPositionByUid\n        * @description - get Position on Array by Uid\n        * @function\n        * @return {number} index - Returns an index position on Array\n        */\n        getPositionByUid(array, uid): number {\n            let index = array.map(function(element){\n                return element.Uid;\n            }).indexOf(uid);\n            return index;\n        }\n\n        /**\n        * groupByYear\n        * @description - take an array and grouping it by Year\n        * @function\n        * @return {Array<any>} newArrayGroupedByYear - Returns an array grouped by Year\n        */\n        groupByYear(array): any {\n            let newArrayGroupedByYear = _.groupBy(array, function(item:any) {\n                return item.dateCreated.year;\n            });\n\n            return newArrayGroupedByYear;\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n    .module('finApp.core.util', [])\n    .service(FunctionsUtilService.serviceId, FunctionsUtilService);\n\n}\n"]}